{"mappings":"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","sources":["src/js/gallery-items.js","node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/js/01-gallery.js"],"sourcesContent":["export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820__480.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.com\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.14.0\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5,\n        download: false\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    this.close();\n                    return;\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.trim().split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.download = document.createElement('div');\n        this.domNodes.download.classList.add('sl-download');\n\n        this.domNodes.downloadLink = document.createElement('a');\n        this.domNodes.downloadLink.setAttribute('download', '');\n        this.domNodes.downloadLink.textContent = this.options.download;\n\n        this.domNodes.download.appendChild(this.domNodes.downloadLink);\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || (element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')($|\\\\?.*$)', 'i').test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight + 'px';\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            if(this.options.overlay) {\n                document.body.removeChild(this.domNodes.overlay);\n            }\n            this.domNodes.additionalHtml = null;\n            this.domNodes.download = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    if(!this.currentImage) return;\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : document.querySelector(this.generateQuerySelector(this.relatedElements[this.currentImageIndex]) + ' ' + this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n            if (this.options.download) {\n                this.domNodes.downloadLink.setAttribute('href', this.currentImage.getAttribute('src'));\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                // event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        if (this.options.download && this.domNodes.download) {\n            this.domNodes.wrapper.appendChild(this.domNodes.download);\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton, this.domNodes.download], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element) {\n                element.style.opacity = 0;\n                element.style.display = display || \"block\";\n            }\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = currentOpacity;\n                        }\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = opacityTarget;\n                        }\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem, position = 0) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        if(position > 0) {\n            elem = this.elements[position];\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    openPosition(position) {\n        let elem = this.elements[position];\n        this.open(elem, position)\n    }\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n","// Add imports above this line\nimport { galleryItems } from './gallery-items';\n// Change code below this line\nimport SimpleLightbox from \"simplelightbox/dist/simple-lightbox.esm\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst refs = {\n    gallery: document.querySelector(\".gallery\"),\n}\nconst images = galleryItems.map(({ preview, original, description }) => {\n    return `<li class=\"gallery__item\">\n   <a class=\"gallery__link\" href=\"${original}\">\n      <img class=\"gallery__image\" src=\"${preview}\" alt=\"${description}\" />\n   </a>\n</li>`\n}).join(\"\");\n\nrefs.gallery.insertAdjacentHTML(\"afterbegin\", images);\n\nconst lightbox = new SimpleLightbox(\".gallery li a\", { captionsData: \"alt\", captionDelay : 250});\n\n\n lightbox.on(\"click\",open());\n\n\n console.log(galleryItems);\n"],"names":["$7b225180b5019822$export$f795133be3c5eb8c","preview","original","description","$945867cc3302d81d$var$SimpleLightbox","sourceAttr","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","loop","rel","docClose","swipeTolerance","className","widthRatio","heightRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","focus","scrollZoom","scrollZoomFactor","download","transitionPrefix","isPassiveEventsSupported","transitionCapable","isTouchDevice","window","isAppleDevice","test","navigator","platform","initialLocationHash","pushStateSupport","isOpen","isAnimating","isClosing","isFadeIn","urlChangedOnce","hashReseted","historyHasChanges","historyUpdateTimeout","currentImage","eventNamespace","domNodes","loadedImages","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","capture","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","elements","options","Object","assign","this","defaultOptions","checkPassiveEventsSupport","initialSelector","Array","from","document","querySelectorAll","length","relatedElements","calculateTransitionPrefix","hash","getRelated","filter","element","src","getAttribute","imgArr","indexOf","push","createDomNodes","wrapper","appendChild","closeButton","navigation","spinner","event","isValidLink","currentTarget","preventDefault","initialImageIndex","openImage","addEventListener","target","body","parentElement","classList","contains","throttle","controlCoordinates","key","setAttribute","loadImage","addEvents","opts","defineProperty","get","supportsPassive","removeEventListener","e","elem","tagName","id","parentNode","str","classes","trim","split","i","childIndex","previousElementSibling","generateQuerySelector","overlay","createElement","add","dataset","opacityTarget","overlayOpacity","innerHTML","counter","downloadLink","textContent","caption","captionClasses","image","limit","inThrottle","func","apply","arguments","setTimeout","RegExp","s","documentElement","style","scrollbarWidth","scrollDiv","offsetWidth","clientWidth","removeChild","type","slice","call","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","paddingRight","parseInt","getComputedStyle","getScrollbarWidth","originalPaddingRight","forEach","actualPadding","calculatedPadding","parseFloat","remove","fixedElements","padding","currentImageIndex","dispatchEvent","Event","resetHash","fadeOut","toggleScrollbar","querySelector","minMax","location","substring","index","next","prev","nextImage","Image","prevImage","direction","slideDirection","newIndex","slide","show","adjustImage","preload","tmpImage","windowWidth","windowHeight","innerHeight","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","alert","updateURL","captionText","imageWidth","width","imageHeight","height","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","captionContainer","hide","setCaption","value","min","max","setZoomData","bind","hashchangeHandler","getElementsByTagName","match","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","scrollTopPos","scrollTop","pageX","pageY","opacity","clientX","clientY","touches","sqrt","possibleDir","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","newHash","title","replace","back","pushState","pathname","search","clearTimeout","updateHash","speed","pos","elems","targetURL","events","callback","wrap","namespaces","passive","duration","element1","getPropertyValue","fade","currentOpacity","step","requestAnimationFrame","element2","initialDisplay","input","Symbol","iterator","fullyNamespacedEvents","position","jQuery","open","off","selector","destroy","constructor","$97d4a16aabe2244a$var$refs","gallery","$97d4a16aabe2244a$var$images","map","join","insertAdjacentHTML","$945867cc3302d81d$export$2e2bcd8739ae039","on","console","log"],"version":3,"file":"01-gallery.d9c58687.js.map"}